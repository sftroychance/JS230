Array to Nodes

Implement a function that converts a nested array of nodeNames (see Nodes to Array exercise for examples) to nodes. Go over the sample code and the corresponding return values below as a guide for what you will implement.

- returning essentially html code (of empty elements) represented by the array

- at each generation, return <parent> + childelements + </parent>
- at each generation, increase indent by 2 spaces
- if an element has no children, tag and closing tag are on the same line
- if an element has children, recursively call function with each child, increasing generation by 1 with each recursion (or can increase by 2 to represent spaces)
- outer function: declare/initialize result string
- inner recursive function(array, generation 1)
	- append array[0] tag to string // base case
	- if subarray is empty, append array[0] closing tag to string and return
	- if subarray is not empty, for each element of subarray, recursively call function with that element and generation + 1
- return string


Work Back
Given the JavaScript code below, create the corresponding HTML that results to the same logs to the console when executed in sequence.

console.log(document.head.childNodes.length); // 3
console.log(document.head.children[0].tagName); // 'TITLE'
console.log(document.head.textContent);
// "
//       Title
//     "
console.log(document.body.children.length); // 3
console.log(document.body.childNodes.length); // 5
console.log(document.querySelector('div').parentNode.parentNode.tagName); // 'BODY'
console.log(document.querySelector('div section').children[2].nextElementSibling); // null
console.log(document.querySelectorAll('div').length); // 1

var nodeA = document.body.firstElementChild;
console.log(document.querySelector('footer').children.length); // 1
console.log(document.querySelector('body').replaceChild(
  document.querySelector('footer'), document.body.firstElementChild).tagName);
// 'HEADER'
console.log(document.body.appendChild(nodeA)); // <header>Header<header>

console.log(document.querySelector('section').textContent.split("\n").map(function(text) {
  return text.trim();
}).filter(function(text) {
  return text.length > 0;
})); // ["H1", "Hello", "World"]

console.log(document.querySelector('section').children); // HTMLCollection(3) [h1, p, p]
console.log(document.querySelector('section').textContent);
// "
//             H1
//             Hello
//             World
//           "
console.log(document.querySelector('span.emphasis').parentNode.tagName); // 'FOOTER'

<html>
  <head>
    <title>Title</title>
  </head>
  <body><header>Header</header>
    <article>
      <div>
        <section>
          <h1>H1</h1>
          <p>Hello</p>
          <p>World</p>
        </section>
      </div>
    </article><footer><span class="emphasis"></span></footer>
  </body>
</html>


notes:
- instead of an article tag, use a main tag as below:
<body>
  <header>Header</header><main>
    <div>
      <section>
        <h1>H1</h1>
        <p>Hello</p>
        <p>World</p>
      </section>
    </div></main>
...

